# MDL file for Synth-A-Modeler
#
# (c) Edgar Berdahl, 2012
# Audio Communication Group
# Technical University of Berlin
#
# -------------------------------------------------------------------
#
# The above copyright notice including the copyright holders and this
# permission notice shall be included in all copies, substantial
# portions, or derivatives of the Software and Software portions.
#
# The end-user documentation included with the redistribution, if any,
# must include the following acknowledgment: "This software was 
# developed at least in part using Synth-A-Modeler, which is a modular 
# and open-source environment for designing physical models (see 
# https://github.com/eberdahl/SaM)", in the same place and form as other
# third-party acknowledgments. In addition, this acknowledgment must 
# appear in the software itself in the same form and location as other 
# such third-party acknowledgments.
#
# Alternatively, if software is generated using Synth-A-Modeler, then 
# the end-user documentation included with the generated software, if 
# any, must include the following statement: "This software was generated 
# using Synth-A-Modeler, which is a modular and open-source environment
# for designing physical models (see https://github.com/eberdahl/SaM)",
# in the same place and form as other third-party acknowledgments. In
# addition, this acknowledgment must appear prominently in any software
# generated by Synth-A-Modeler in the same form and location as other
# such third-party acknowledgments, and in such a manner that users
# will be aware that the software was generated by Synth-A-Modeler.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 3 as
# published by the Free Software Foundation except subject to the additional
# attribution requirements described beneath the copyright notice above.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the modified GNU General Public
# License along with this program.




resonators(f1,tau,m*(440.0/f1)^3,f2,tau*1.4,m*(440.0/f2)^3,f3,tau*0.8,m*(440.0/f3)^3,f4,tau*0.5,m*(440.0/f4)^3),reson1; # pos 384,160
#resonators(f1,tau,m,f2,tau*1.4,m,f3,tau*0.8,m,f4,tau*0.5,m),reson1; # pos 384,160
port(),dev1; # pos 387,285
port(),dev2; # pos 267,157


touch(interactionStiffness,interactionDamping,0.0),tt,reson1,dev1;








faustcode: f=300;  // Reference frequency for the initial resonance frequency choices
faustcode: f1=hslider("Resonance Frequency1", f, 40.0, 3000.0, 4.0);
faustcode: f2=hslider("Resonance Frequency2", f*1.4142, 40.0, 3000.0, 4.0);
faustcode: f3=hslider("Resonance Frequency3", f*1.7321, 40.0, 3000.0, 4.0);
faustcode: f4=hslider("Resonance Frequency4", f*2.2361, 40.0, 3000.0, 4.0);
faustcode: tau=hslider("Decay Time of Resonator", 1.0, 0.01, 5.0, 0.01);
faustcode: m=hslider("Mass of Resonator", 0.003, 0.0004, 0.008, 0.0002);
faustcode: interactionStiffness=hslider("Touch Interaction Stiffness", 250.0, 0.0, 500.0, 50.0);
faustcode: interactionDamping=hslider("Touch Interaction Damping", 0.09, 0.002, 0.3, 0.002);
faustcode: outputDSP=highpass(4,30.0);
faustcode: vol=hslider("Z Volume",0.03,0.001,0.10,0.001) : onePoleBLT(10.0); // LP filter with cutoff frequency at 10Hz smoothes


audioout,aLeft,reson1*100000.0:*(vol):outputDSP; # pos 355,40
audioout,aRight,reson1*100000.0:*(vol):outputDSP; # pos 555,96
